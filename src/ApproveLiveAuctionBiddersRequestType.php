<?php
// autogenerated file 30.08.2007 09:37
// $Id$
// $Log$
//
require_once 'BidApprovalArrayType.php';
require_once 'AmountType.php';
require_once 'AbstractRequestType.php';

class ApproveLiveAuctionBiddersRequestType extends AbstractRequestType
{
	// start props
	// @var int $UserCatalogID
	var $UserCatalogID;
	// @var BidApprovalArrayType $BidApproval
	var $BidApproval;
	// @var boolean $ApproveAllPending
	var $ApproveAllPending;
	// @var AmountType $AllApprovedBiddingLimit
	var $AllApprovedBiddingLimit;
	// end props

/**
 *

 * @return int
 */
	function getUserCatalogID()
	{
		return $this->UserCatalogID;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setUserCatalogID($value)
	{
		$this->UserCatalogID = $value;
	}
/**
 *

 * @return BidApprovalArrayType
 */
	function getBidApproval()
	{
		return $this->BidApproval;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBidApproval($value)
	{
		$this->BidApproval = $value;
	}
/**
 *

 * @return boolean
 */
	function getApproveAllPending()
	{
		return $this->ApproveAllPending;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setApproveAllPending($value)
	{
		$this->ApproveAllPending = $value;
	}
/**
 *

 * @return AmountType
 */
	function getAllApprovedBiddingLimit()
	{
		return $this->AllApprovedBiddingLimit;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAllApprovedBiddingLimit($value)
	{
		$this->AllApprovedBiddingLimit = $value;
	}
/**
 *

 * @return 
 */
	function ApproveLiveAuctionBiddersRequestType()
	{
		$this->AbstractRequestType('ApproveLiveAuctionBiddersRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'UserCatalogID' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'BidApproval' =>
				array(
					'required' => false,
					'type' => 'BidApprovalArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ApproveAllPending' =>
				array(
					'required' => false,
					'type' => 'boolean',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AllApprovedBiddingLimit' =>
				array(
					'required' => false,
					'type' => 'AmountType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
