<?php
// autogenerated file 30.08.2007 09:37
// $Id$
// $Log$
//
require_once 'AbstractRequestType.php';

class GetCategorySpecificsRequestType extends AbstractRequestType
{
	// start props
	// @var string $CategoryID
	var $CategoryID;
	// @var dateTime $LastUpdateTime
	var $LastUpdateTime;
	// @var int $MaxNames
	var $MaxNames;
	// @var int $MaxValuesPerName
	var $MaxValuesPerName;
	// @var string $Name
	var $Name;
	// end props

/**
 *

 * @return string
 * @param  $index 
 */
	function getCategoryID($index = null)
	{
		if ($index) {
		return $this->CategoryID[$index];
	} else {
		return $this->CategoryID;
	}

	}
/**
 *

 * @return void
 * @param  $value 
 * @param  $index 
 */
	function setCategoryID($value, $index = null)
	{
		if ($index) {
	$this->CategoryID[$index] = $value;
	} else {
	$this->CategoryID = $value;
	}

	}
/**
 *

 * @return dateTime
 */
	function getLastUpdateTime()
	{
		return $this->LastUpdateTime;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setLastUpdateTime($value)
	{
		$this->LastUpdateTime = $value;
	}
/**
 *

 * @return int
 */
	function getMaxNames()
	{
		return $this->MaxNames;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMaxNames($value)
	{
		$this->MaxNames = $value;
	}
/**
 *

 * @return int
 */
	function getMaxValuesPerName()
	{
		return $this->MaxValuesPerName;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setMaxValuesPerName($value)
	{
		$this->MaxValuesPerName = $value;
	}
/**
 *

 * @return string
 */
	function getName()
	{
		return $this->Name;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setName($value)
	{
		$this->Name = $value;
	}
/**
 *

 * @return 
 */
	function GetCategorySpecificsRequestType()
	{
		$this->AbstractRequestType('GetCategorySpecificsRequestType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'CategoryID' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => true,
					'cardinality' => '0..*'
				),
				'LastUpdateTime' =>
				array(
					'required' => false,
					'type' => 'dateTime',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MaxNames' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'MaxValuesPerName' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'Name' =>
				array(
					'required' => false,
					'type' => 'string',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
