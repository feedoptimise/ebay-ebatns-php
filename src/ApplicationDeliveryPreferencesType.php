<?php
// autogenerated file 30.08.2007 09:37
// $Id$
// $Log$
//
require_once 'EbatNs_ComplexType.php';
require_once 'NotificationPayloadTypeCodeType.php';
require_once 'DeviceTypeCodeType.php';
require_once 'EnableCodeType.php';

class ApplicationDeliveryPreferencesType extends EbatNs_ComplexType
{
	// start props
	// @var anyURI $ApplicationURL
	var $ApplicationURL;
	// @var EnableCodeType $ApplicationEnable
	var $ApplicationEnable;
	// @var anyURI $AlertEmail
	var $AlertEmail;
	// @var EnableCodeType $AlertEnable
	var $AlertEnable;
	// @var NotificationPayloadTypeCodeType $NotificationPayloadType
	var $NotificationPayloadType;
	// @var DeviceTypeCodeType $DeviceType
	var $DeviceType;
	// end props

/**
 *

 * @return anyURI
 */
	function getApplicationURL()
	{
		return $this->ApplicationURL;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setApplicationURL($value)
	{
		$this->ApplicationURL = $value;
	}
/**
 *

 * @return EnableCodeType
 */
	function getApplicationEnable()
	{
		return $this->ApplicationEnable;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setApplicationEnable($value)
	{
		$this->ApplicationEnable = $value;
	}
/**
 *

 * @return anyURI
 */
	function getAlertEmail()
	{
		return $this->AlertEmail;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAlertEmail($value)
	{
		$this->AlertEmail = $value;
	}
/**
 *

 * @return EnableCodeType
 */
	function getAlertEnable()
	{
		return $this->AlertEnable;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setAlertEnable($value)
	{
		$this->AlertEnable = $value;
	}
/**
 *

 * @return NotificationPayloadTypeCodeType
 */
	function getNotificationPayloadType()
	{
		return $this->NotificationPayloadType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setNotificationPayloadType($value)
	{
		$this->NotificationPayloadType = $value;
	}
/**
 *

 * @return DeviceTypeCodeType
 */
	function getDeviceType()
	{
		return $this->DeviceType;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setDeviceType($value)
	{
		$this->DeviceType = $value;
	}
/**
 *

 * @return 
 */
	function ApplicationDeliveryPreferencesType()
	{
		$this->EbatNs_ComplexType('ApplicationDeliveryPreferencesType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'ApplicationURL' =>
				array(
					'required' => false,
					'type' => 'anyURI',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'ApplicationEnable' =>
				array(
					'required' => false,
					'type' => 'EnableCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AlertEmail' =>
				array(
					'required' => false,
					'type' => 'anyURI',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'AlertEnable' =>
				array(
					'required' => false,
					'type' => 'EnableCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'NotificationPayloadType' =>
				array(
					'required' => false,
					'type' => 'NotificationPayloadTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'DeviceType' =>
				array(
					'required' => false,
					'type' => 'DeviceTypeCodeType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
