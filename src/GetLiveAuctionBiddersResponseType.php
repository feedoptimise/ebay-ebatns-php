<?php
// autogenerated file 30.08.2007 09:37
// $Id$
// $Log$
//
require_once 'BidderDetailArrayType.php';
require_once 'AbstractResponseType.php';
require_once 'PaginationResultType.php';

class GetLiveAuctionBiddersResponseType extends AbstractResponseType
{
	// start props
	// @var BidderDetailArrayType $BidderDetails
	var $BidderDetails;
	// @var int $TotalPending
	var $TotalPending;
	// @var int $TotalApproved
	var $TotalApproved;
	// @var int $TotalDenied
	var $TotalDenied;
	// @var int $PageNumber
	var $PageNumber;
	// @var PaginationResultType $PaginationResult
	var $PaginationResult;
	// end props

/**
 *

 * @return BidderDetailArrayType
 */
	function getBidderDetails()
	{
		return $this->BidderDetails;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setBidderDetails($value)
	{
		$this->BidderDetails = $value;
	}
/**
 *

 * @return int
 */
	function getTotalPending()
	{
		return $this->TotalPending;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalPending($value)
	{
		$this->TotalPending = $value;
	}
/**
 *

 * @return int
 */
	function getTotalApproved()
	{
		return $this->TotalApproved;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalApproved($value)
	{
		$this->TotalApproved = $value;
	}
/**
 *

 * @return int
 */
	function getTotalDenied()
	{
		return $this->TotalDenied;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setTotalDenied($value)
	{
		$this->TotalDenied = $value;
	}
/**
 *

 * @return int
 */
	function getPageNumber()
	{
		return $this->PageNumber;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPageNumber($value)
	{
		$this->PageNumber = $value;
	}
/**
 *

 * @return PaginationResultType
 */
	function getPaginationResult()
	{
		return $this->PaginationResult;
	}
/**
 *

 * @return void
 * @param  $value 
 */
	function setPaginationResult($value)
	{
		$this->PaginationResult = $value;
	}
/**
 *

 * @return 
 */
	function GetLiveAuctionBiddersResponseType()
	{
		$this->AbstractResponseType('GetLiveAuctionBiddersResponseType', 'urn:ebay:apis:eBLBaseComponents');
		$this->_elements = array_merge($this->_elements,
			array(
				'BidderDetails' =>
				array(
					'required' => false,
					'type' => 'BidderDetailArrayType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalPending' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalApproved' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'TotalDenied' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PageNumber' =>
				array(
					'required' => false,
					'type' => 'int',
					'nsURI' => 'http://www.w3.org/2001/XMLSchema',
					'array' => false,
					'cardinality' => '0..1'
				),
				'PaginationResult' =>
				array(
					'required' => false,
					'type' => 'PaginationResultType',
					'nsURI' => 'urn:ebay:apis:eBLBaseComponents',
					'array' => false,
					'cardinality' => '0..1'
				)
			));

	}
}
?>
